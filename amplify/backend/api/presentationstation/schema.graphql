type Project
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["Admin"] }
      {
        allow: groups
        groups: ["WTC"]
        operations: [create, update, delete, read]
      }
      { allow: groups, groupsField: "client", operations: [read] }
    ]
  )
  @key(name: "ByClient", fields: ["client"], queryField: "projectsByClient")
  @key(name: "BySlug", fields: ["slug"], queryField: "projectsBySlug") {
  id: ID!
  title: String!
  slug: String!
  client: ClientGroupEnum!
  description: String
  concepts: [Concept]
    @connection(keyName: "byConcept", fields: ["id"], sortField: "createdAt")
}

enum ClientGroupEnum {
  NOA
  TPCI
  WTC
}

type Concept
  @model(queries: null)
  @key(name: "byConcept", fields: ["projectID"])
  @auth(rules: [{ allow: groups, groups: ["Admin", "WTC"] }]) {
  id: ID!
  name: String!
  projectID: ID!
  pages: [Page]
    @connection(keyName: "byPage", fields: ["id"], sortField: "createdAt")
}

type Page
  @model(queries: null)
  @key(name: "byPage", fields: ["conceptID"])
  @auth(rules: [{ allow: groups, groups: ["Admin", "WTC"] }]) {
  id: ID!
  name: String!
  size: PageSizeEnum!
  conceptID: ID!
}

enum PageSizeEnum {
  Small
  Medium
  Large
}
